# Docker Compose configuration for Pirate Mode
# Generated by Easy Docker Deploy
# 
# This file defines all services and their configurations.
# Each service is documented with its purpose and important settings.
#
# 📝 Quick Reference:
# - Services: Individual containers that make up your application
# - Networks: How containers communicate with each other
# - Volumes: Persistent storage for your data
# 
# 🔧 Common Commands:
# - docker-compose up -d    Start all services
# - docker-compose down     Stop all services
# - docker-compose logs     View service logs
# - docker-compose pull    Update service images

version: "3.8"  # Using modern Docker Compose features

# Service Definitions
# Each service runs in its own container with specific configuration
services:
  {% for service_name, service in services.items() %}
  {%- if service._docs %}
  # 📦 {{ service._docs.description }}
  # 
  # 🔌 Ports: {{ service._docs.ports }}
  # 💾 Volumes: {{ service._docs.volumes }}
  # ⚙️ Environment: {{ service._docs.environment }}
  #
  # 🚀 Quick Setup:
  {%- for step in service._docs.quick_setup %}
  # {{ step }}
  {%- endfor %}
  #
  # 📚 Learn More: {{ service._docs.learn_more }}
  {%- endif %}
  {{ service_name }}:
    # 🏷️ Docker image to use
    image: {{ service.image }}
    
    # 📛 Container name (for easy reference)
    container_name: {{ service.container_name | default(service_name) }}
    
    {%- if service.restart is defined %}
    # 🔄 Restart policy
    # Options: no, always, on-failure, unless-stopped
    restart: {{ service.restart }}
    {%- endif %}
    
    {%- if service.ports %}
    # 🔌 Port mappings
    # Format: "host:container" - Access services from your machine
    ports:
      {%- for port in service.ports %}
      - "{{ port }}"  # {{ service._docs.ports if service._docs else "" }}
      {%- endfor %}
    {%- endif %}
    
    {%- if service.environment %}
    # ⚙️ Environment variables
    # Configure service behavior
    environment:
      {%- for key, value in service.environment.items() %}
      - {{ key }}={{ value }}
      {%- endfor %}
    {%- endif %}
    
    {%- if service.volumes %}
    # 💾 Volume mounts
    # Persist data and share files between host and container
    volumes:
      {%- for volume in service.volumes %}
      - {{ volume }}
      {%- endfor %}
    {%- endif %}
    
    {%- if service.networks %}
    # 🌐 Network connections
    # Connect to other services
    networks:
      {%- for network in service.networks %}
      - {{ network }}
      {%- endfor %}
    {%- endif %}
    
    {%- if service.depends_on %}
    # ⛓️ Service dependencies
    # Ensure proper startup order
    depends_on:
      {%- for dependency in service.depends_on %}
      - {{ dependency }}
      {%- endfor %}
    {%- endif %}
    
  {% endfor %}

{%- if networks is defined %}
# 🌐 Network Configuration
# {{ _network_docs.description if _network_docs else "" }}
# {{ _network_docs.details if _network_docs else "" }}
#
# 📚 Learn More: {{ _network_docs.learn_more if _network_docs else "" }}
networks:
  {%- for name, network in networks.items() %}
  {{ name }}:
    {%- if network is mapping %}
    {%- for key, value in network.items() %}
    {{ key }}: {{ value }}
    {%- endfor %}
    {%- endif %}
  {%- endfor %}
{%- endif %}

{%- if volumes is defined %}
# 💾 Volume Configuration
# {{ _volume_docs.description if _volume_docs else "" }}
# {{ _volume_docs.details if _volume_docs else "" }}
#
# 📚 Learn More: {{ _volume_docs.learn_more if _volume_docs else "" }}
volumes:
  {%- for name, volume in volumes.items() %}
  {{ name }}:
    {%- if volume is mapping %}
    {%- for key, value in volume.items() %}
    {{ key }}: {{ value }}
    {%- endfor %}
    {%- endif %}
  {%- endfor %}
{%- endif %}

# 🔍 Need help? Check out our documentation:
# https://github.com/yourusername/easy-docker-deploy 